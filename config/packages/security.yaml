security:
    encoders:
        App\Entity\User:
            algorithm: bcrypt

    # https://symfony.com/doc/current/security/experimental_authenticators.html
    enable_authenticator_manager: true
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: nickname
        app_email_provider:
            entity:
                class: App\Entity\User
                property: email

        app_users:
            chain:
                providers: [ 'app_user_provider', 'app_email_provider' ]

    role_hierarchy:
        ROLE_ADMIN: [ROLE_EDITOR, ROLE_COORDINATOR, ROLE_SUPER_ADMIN]

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            lazy: true
            provider: app_users

            logout:
                path: app_logout

            custom_authenticator: App\Security\LoginFormAuthenticator

            login_throttling:
                max_attempts: 30

            remember_me:
                secret: '%kernel.secret%'
                lifetime: 2592000

            # where to redirect after logout
            # target: app_any_route

            # custom_authenticator: App\Security\LoginFormAuthenticator

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/account, roles: IS_AUTHENTICATED_FULLY }
        - { path: ^/editor, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }
